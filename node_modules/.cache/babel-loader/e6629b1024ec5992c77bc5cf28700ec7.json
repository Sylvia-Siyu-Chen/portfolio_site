{"ast":null,"code":"'use strict';\n\nmodule.exports = function () {\n  var currentColors = this.getCurrentColors();\n  var gradientAverage = null;\n  var lightnessAverage, i;\n  var colorsAverage = currentColors.map(function (el) {\n    // Compute the average lightness of each color\n    // in the current gradient\n    return Math.max(el[0], el[1], el[2]);\n  });\n\n  for (i = 0; i < colorsAverage.length; i++) {\n    // Add all the average lightness of each color\n    gradientAverage = gradientAverage === null ? colorsAverage[i] : gradientAverage + colorsAverage[i];\n\n    if (i === colorsAverage.length - 1) {\n      // if it's the last lightness average\n      // divide it by the total length to\n      // have the global average lightness\n      lightnessAverage = Math.round(gradientAverage / (i + 1));\n    }\n  }\n\n  return lightnessAverage >= 128 ? 'light' : 'dark';\n};","map":{"version":3,"sources":["/Users/sylv/Desktop/coding/portfolio-site/node_modules/granim/lib/getLightness.js"],"names":["module","exports","currentColors","getCurrentColors","gradientAverage","lightnessAverage","i","colorsAverage","map","el","Math","max","length","round"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC3B,MAAIC,aAAa,GAAG,KAAKC,gBAAL,EAApB;AACA,MAAIC,eAAe,GAAG,IAAtB;AACA,MAAIC,gBAAJ,EAAsBC,CAAtB;AACA,MAAIC,aAAa,GAAGL,aAAa,CAACM,GAAd,CAAkB,UAASC,EAAT,EAAa;AAClD;AACA;AACA,WAAOC,IAAI,CAACC,GAAL,CAASF,EAAE,CAAC,CAAD,CAAX,EAAgBA,EAAE,CAAC,CAAD,CAAlB,EAAuBA,EAAE,CAAC,CAAD,CAAzB,CAAP;AACA,GAJmB,CAApB;;AAMA,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,aAAa,CAACK,MAA9B,EAAsCN,CAAC,EAAvC,EAA2C;AAC1C;AACAF,IAAAA,eAAe,GAAGA,eAAe,KAAK,IAApB,GACjBG,aAAa,CAACD,CAAD,CADI,GACEF,eAAe,GAAGG,aAAa,CAACD,CAAD,CADnD;;AAGA,QAAIA,CAAC,KAAKC,aAAa,CAACK,MAAd,GAAuB,CAAjC,EAAoC;AACnC;AACA;AACA;AACAP,MAAAA,gBAAgB,GAAGK,IAAI,CAACG,KAAL,CAAWT,eAAe,IAAIE,CAAC,GAAG,CAAR,CAA1B,CAAnB;AACA;AACD;;AAED,SAAOD,gBAAgB,IAAI,GAApB,GAA0B,OAA1B,GAAoC,MAA3C;AACA,CAxBD","sourcesContent":["'use strict';\r\n\r\nmodule.exports = function() {\r\n\tvar currentColors = this.getCurrentColors();\r\n\tvar gradientAverage = null;\r\n\tvar lightnessAverage, i;\r\n\tvar colorsAverage = currentColors.map(function(el) {\r\n\t\t// Compute the average lightness of each color\r\n\t\t// in the current gradient\r\n\t\treturn Math.max(el[0], el[1], el[2]);\r\n\t});\r\n\r\n\tfor (i = 0; i < colorsAverage.length; i++) {\r\n\t\t// Add all the average lightness of each color\r\n\t\tgradientAverage = gradientAverage === null ?\r\n\t\t\tcolorsAverage[i] : gradientAverage + colorsAverage[i];\r\n\r\n\t\tif (i === colorsAverage.length - 1) {\r\n\t\t\t// if it's the last lightness average\r\n\t\t\t// divide it by the total length to\r\n\t\t\t// have the global average lightness\r\n\t\t\tlightnessAverage = Math.round(gradientAverage / (i + 1));\r\n\t\t}\r\n\t}\r\n\r\n\treturn lightnessAverage >= 128 ? 'light' : 'dark';\r\n};\r\n"]},"metadata":{},"sourceType":"script"}